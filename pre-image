#!/bin/bash

clear; echo -e "\n\n\n\n\n\n\n\n\n\n"
echo -e "-------------------------------------------------------------------------------------"
echo -e "| Initializing new raspi image                                                      |"
echo -e "-------------------------------------------------------------------------------------"

# ----- Refresh System --------------------------------------
refreshSystem=1

# ----- Install NANO configurations -------------------------
installNano=1

# ----- Install Avahi Zeroconf ------------------------------
installAvahi=1

# ----- Install Bluetooth suite -----------------------------
installBluetooth=1

# ----- Setting up US Locale & Keyboard ---------------------
setupLocale=1

# ----- change pi password --------------------------------
changePiPwd=1
while [ "$cont" != "y" ] && [ "$cont" != "Y" ]; do
	echo -n "Enter new pi user password: "; read piPassword
	echo -n "User information ok [y/n]? "; read -n 1 cont; echo
	if [ "$piPassword" == "" ]; then cont="n"; fi
done
echo -e "\n\n"

# ----- Setup New user ------------------------------------
setupPrimaryUser=1
cont="n"
echo -e "\n\nLet's set up a new primary user..."
while [ "$cont" != "y" ] && [ "$cont" != "Y" ]; do
	echo -n "Enter username: "; read user
	echo -n "Enter full name: "; read userFullName
	echo -n "Enter password: "; read password
	echo -n "User information ok [y/n]? "; read -n 1 cont; echo
	if [ "$user" == "" ]; then cont="n"; fi
done
echo -e "\n\n"

# ----- Install node.js --------------------------------------
installNode=1

# ----- Free Serial Port from console use --------------------------------------
freeSerialPort=1





#####################################################################################
## DEFAULT CHANGES
#####################################################################################
sudo cp -f files/.bashrc /home/pi					# Set bash environment
sudo chown pi:pi /home/pi/.bashrc
sudo mkdir /usr/local/bin
mkdir ~/temp


#####################################################################################
## RERESH SYSTEM WITH APT-GET LIBRARY UPDATE & UPGRADE
#####################################################################################

if [ "$refreshSystem" == "1" ]; then
	clear; echo -e "\n\n\n\n\n\n\n\n\n\n"
	echo -e " Updating APT-GET libraries and installed packages..."
	echo -e "-------------------------------------------------------------------------------------"
	sudo apt-get -y -qq update 			# Update library
	sudo apt-get -y -qq upgrade 			# Upgrade all local libraries
	sudo apt-get -y autoremove			# removes redundant packages after upgrade
	echo -e "\n\nAPT-GET update complete\n\n"
fi


#####################################################################################
## Install Nano configuration
#####################################################################################

if [ "$installNano" == "1" ]; then
	clear; echo -e "\n\n\n\n\n\n\n\n\n\n"
	echo -e " Installing Nano Configuration..."
	echo -e "-------------------------------------------------------------------------------------"
	sudo cp -f files/.nanorc /home/pi
	sudo chown pi:pi /home/pi/.nanorc
	sudo cp files/nanofiles/* /usr/share/nano
	echo -e "\n\nAvahi Daemon Installed...\n\n"
fi


#####################################################################################
## Install Avahi Daemon for zeroconf access (raspberrypi.local)
#####################################################################################

if [ "$installAvahi" == "1" ]; then
	clear; echo -e "\n\n\n\n\n\n\n\n\n\n"
	echo -e " Installing Avahi..."
	echo -e "-------------------------------------------------------------------------------------"
	sudo apt-get -y install avahi-daemon 
	echo -e "\n\nAvahi Daemon Installed...\n\n"
fi


#####################################################################################
## Installing bluetooth tools
#####################################################################################

if [ "$installBluetooth" == "1" ]; then
	clear; echo -e "\n\n\n\n\n\n\n\n\n\n"
	echo -e " Installing Bluetooth tools..."
	echo -e "-------------------------------------------------------------------------------------"
	sudo apt-get -y install bluez
	sudo apt-get -y install python-gobject
	echo -e "\n\nVerify that your bluetooth adapter is displayed below:"
	hcitool dev
	echo -e "\n\nBluetooth installed...\n\n"
fi


#####################################################################################
## ADJUSTING SYSTEM SETTINGS
#####################################################################################

if [ "$setupLocale" == "1" ]; then
	clear; echo -e "\n\n\n\n\n\n\n\n\n\n"
	echo -e " Setting US locale and keyboard..."
	echo -e "-------------------------------------------------------------------------------------"
	sudo cp -f files/locale.gen /etc/locale.gen 		# Set locale to US
	sudo cp -f files/keyboard /etc/default/keyboard		# Set keyboard layout to US
	echo -e "\n\nUS Locale & Keyboard setup complete\n\n"
fi


#####################################################################################
## Free Serial Port
#####################################################################################

if [ "$freeSerialPort" == "1" ]; then
	clear; echo -e "\n\n\n\n\n\n\n\n\n\n"
	echo -e " Freeing serial port from console use, to enable GPIO..."
	echo -e "-------------------------------------------------------------------------------------"
	
	sudo mv /boot/cmdline.txt /boot/cmdline.txt.bk
	sudo cp files/cmdlines.txt /boot/
	sudo chown "root":"root" /boot/cmdline.txt

	sudo mv /etc/inittab /etc/inittab.bk
	sudo cp files/inittab /etc/
	sudo chown "root":"root" /etc/inittab

	echo -e "\n\n Serial port freed... on next reboot"
fi


#####################################################################################
## SETTING UP USER ENVIRONMENT
#####################################################################################

if [ "$setupPrimaryUser" == "1" ]; then

	clear; echo -e "\n\n\n\n\n\n\n\n\n\n"
	echo -e " Setting up new primary user..."
	echo -e "-------------------------------------------------------------------------------------"

	if [ "$user" != "" ]; then
		# Code updated to deprecate below system of 
		# cat files/userinfo | sed -e "s/\#PASSWORD/$password/" -e "s/\#USERFULLNAME/$userFullName/" > ./userinfo
		# echo -e "$password\n$password\n\n\n\n\n\ny\n" > ./userinfo	# Creating user
		# sudo adduser --home /home/"$user" "$user" < ./userinfo	# Creating user
		# rm ./userinfo
		sudo adduser "$user" --gecos "$userFullName, , , " --disabled-password
		echo "$user:$password" | sudo chpasswd
		
		# Configuring user environment
		sudo cp -f files/.bashrc /home/"$user"/					# Set bash environment
		sudo cp -f files/.nanorc /home/"$user"/					# Set bash environment
		sudo chown "$user":"$user" /home/"$user"/.bashrc
		sudo chown "$user":"$user" /home/"$user"/.nanorc
		
		# Setting up sudo rights
		echo -e "$user ALL=(ALL) NOPASSWD: ALL" > ./"$user"
		sudo chown -R root:root ./"$user"
		sudo chmod 440 ./"$user"
		
		sudo mv -f ./"$user" /etc/sudoers.d

		# Setting up raspi in new user's environment to enable next steps
		cd /home/"$user"
		sudo git clone https://github.com/fpapleux/raspi 				# clone git repo into new user home
		sudo chown -R "$user":"$user" *									# change owner of repo files to new user

		echo -e "\n\nUser environment setup complete\n\n"
	fi
fi


#####################################################################################
## Changing Pi Password
#####################################################################################

if [ "$changePiPwd" == "1" ]; then
	clear; echo -e "\n\n\n\n\n\n\n\n\n\n"
	echo -e " Changing Pi Password..."
	echo -e "-------------------------------------------------------------------------------------"

	echo "pi:$piPassword" | sudo chpasswd
	echo -e "\n\npi user passowrd changed...\n\n"
fi


#####################################################################################
## Install node.js
#####################################################################################

if [ "$installNode" == "1" ]; then
	clear; echo -e "\n\n\n\n\n\n\n\n\n\n"
	echo -e " Installing node.js..."
	echo -e "-------------------------------------------------------------------------------------"
	curl -sLS https://deb.nodesource.com/setup_4.x | sudo bash
	sudo apt-get install -y build-essential python-rpi.gpio nodejs
	sudo mkdir /usr/local/bin
	sudo ln -s /usr/bin/nodejs /usr/local/bin/node
	echo -e "\n\n Node JS install complete -- current version is $(node -v)"
fi


#####################################################################################
## Reboot the machine
#####################################################################################

clear; echo -e "\n\n\n\n\n\n\n\n\n\n"
echo "---------------------------------------------------------------------------------"
echo "Based on the work that was just completed we recommend that you restart your"
echo "machine and log back in using your new user account to continue this process."
echo "------------------------ PRESS ANY KEY TO CONTINUE ------------------------------"
read -n 1 q; echo
sudo shutdown -r now

